namespace stydensheskiy
{
    public class StudNumberGenerator
    {
        public string GetStudNumber(int year, int group, string fio)
        {
            string initials = GetInitials(fio);
            string formattedYear = GetFormattedYear(year);

            string studNumber = $"{formattedYear}.{group}.{initials}";

            return studNumber;
        }

        private string GetInitials(string fio)
        {
            string[] nameParts = fio.Split(' ');
            string initials = "";

            foreach (string part in nameParts)
            {
                initials += part[0];
            }

            return initials;
        }

        private string GetFormattedYear(int year)
        {
            return year.ToString("D4");
        }
    }
}

using System;
using stydensheskiy;

namespace proverkaStydencheskiy
{
    class Program
    {
        static void Main(string[] args)
        {
            int year = 2021;
            int group = 1;
            string fio = "Иванов Иван Иванович";

            StudNumberGenerator generator = new StudNumberGenerator();
            string studNumber = generator.GetStudNumber(year, group, fio);

            Console.WriteLine($"Номер студенческого билета: {studNumber}");

            Console.ReadLine();
        }
    }
}

using Microsoft.VisualStudio.TestTools.UnitTesting;

namespace testStydencheskiy
{
    [TestClass]
    public class UnitTest1
    {
        [TestMethod]
        public void GetStudNumber_ReturnsCorrectStudNumber()
        {
            // Arrange
            StudNumberGenerator generator = new StudNumberGenerator();
            int year = 2022;
            int group = 1;
            string fio = "Иванов Иван Иванович";
            string expectedStudNumber = "2022.1.ИИИ";

            // Act
            string actualStudNumber = generator.GetStudNumber(year, group, fio);

            // Assert
            Assert.AreEqual(expectedStudNumber, actualStudNumber);
        }

        [TestMethod]
        public void GetStudNumber_FIOStartsWithUppercase()
        {
            // Arrange
            StudNumberGenerator generator = new StudNumberGenerator();
            int year = 2022;
            int group = 1;
            string fio = "Иванов Иван Иванович";

            // Assert
            string[] names = fio.Split(' ');
            foreach (string name in names)
            {
                char firstLetter = name[0];
                Assert.IsTrue(char.IsUpper(firstLetter)); // Проверка на заглавную букву в начале каждого компонента ФИО
            }
        }

    }

    public class StudNumberGenerator
    {
        public string GetStudNumber(int year, int group, string fio)
        {
            string initials = GetInitials(fio);
            return $"{year}.{group}.{initials}";
        }

        private string GetInitials(string fio)
        {
            string[] names = fio.Split(' ');
            string initials = "";
            foreach (string name in names)
            {
                initials += name[0];
            }
            return initials.ToUpper();
        }
    }
}